// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheHobbyHub.PL.Data;

#nullable disable

namespace TheHobbyHub.PL.Migrations
{
    [DbContext(typeof(HobbyHubEntities))]
    [Migration("20240305015831_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblAddress_Id");

                    b.ToTable("tblAddress", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b683d0fd-6505-42ef-9913-5fef0ddbd7a8"),
                            Address = "123 Main St",
                            City = "Anytown",
                            State = "CA",
                            Zip = "12345"
                        },
                        new
                        {
                            Id = new Guid("e259ef18-8a98-4ce4-8a5d-3f26e381fe27"),
                            Address = "456 Elm St",
                            City = "Othertown",
                            State = "NY",
                            Zip = "54321"
                        },
                        new
                        {
                            Id = new Guid("a589adee-3a90-41d6-b4ac-96e5c0a7a40f"),
                            Address = "789 Oak St",
                            City = "Somewhere",
                            State = "TX",
                            Zip = "67890"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblCompany_Id");

                    b.HasIndex("AddressId");

                    b.ToTable("tblCompany", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("be41a5c0-289d-4fb4-92df-b16072b4619a"),
                            AddressId = new Guid("b683d0fd-6505-42ef-9913-5fef0ddbd7a8"),
                            CompanyName = "Company A",
                            Image = "imageA.jpg",
                            Password = "/BafCUbj3r56CjioX1dcB1ynX20=",
                            UserName = "copanyA"
                        },
                        new
                        {
                            Id = new Guid("b40e2593-d543-482f-8b2e-573a5b545095"),
                            AddressId = new Guid("e259ef18-8a98-4ce4-8a5d-3f26e381fe27"),
                            CompanyName = "Company B",
                            Image = "imageB.jpg",
                            Password = "38Nd3/2M+aip9/TyIzVYXKylmQo=",
                            UserName = "companyB"
                        },
                        new
                        {
                            Id = new Guid("215726ac-7186-42f2-94ab-37109dded89e"),
                            AddressId = new Guid("a589adee-3a90-41d6-b4ac-96e5c0a7a40f"),
                            CompanyName = "Company C",
                            Image = "imageC.jpg",
                            Password = "urYijG3X2+D44I400gasYPqLBHw=",
                            UserName = "companyC"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("HobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblEvent_Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("HobbyId");

                    b.HasIndex("UserId");

                    b.ToTable("tblEvent", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c191acb2-2e63-45ac-926e-d2cc005ed65f"),
                            AddressId = new Guid("b683d0fd-6505-42ef-9913-5fef0ddbd7a8"),
                            CompanyId = new Guid("be41a5c0-289d-4fb4-92df-b16072b4619a"),
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Event A",
                            HobbyId = new Guid("ce136077-ff46-40f8-a7ec-881e481580ed"),
                            Image = "imageA.jpg",
                            UserId = new Guid("1dfcfb60-c1d6-4a34-80c5-f7d85b37d8fc")
                        },
                        new
                        {
                            Id = new Guid("ef917c8f-bd4c-4d17-8270-c9820b593e0b"),
                            AddressId = new Guid("e259ef18-8a98-4ce4-8a5d-3f26e381fe27"),
                            CompanyId = new Guid("b40e2593-d543-482f-8b2e-573a5b545095"),
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Event B",
                            HobbyId = new Guid("9d245fe4-9dd2-49f8-bc6d-7ee863dceff4"),
                            Image = "imageB.jpg",
                            UserId = new Guid("f22783b7-fe4d-4c38-8411-d7d9fd67b8f2")
                        },
                        new
                        {
                            Id = new Guid("080823d8-0491-4acc-b7b1-5b2b79e97f77"),
                            AddressId = new Guid("a589adee-3a90-41d6-b4ac-96e5c0a7a40f"),
                            CompanyId = new Guid("215726ac-7186-42f2-94ab-37109dded89e"),
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Event C",
                            HobbyId = new Guid("4861dc85-1107-45e2-a77a-b156438707ef"),
                            Image = "imageC.jpg",
                            UserId = new Guid("0553b046-f861-49af-854b-49c9aab212ab")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblFriend", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblFriend_Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("tblFriend", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a217758a-f58f-4dc6-a997-bb8cbe626d58"),
                            CompanyId = new Guid("be41a5c0-289d-4fb4-92df-b16072b4619a"),
                            UserId = new Guid("1dfcfb60-c1d6-4a34-80c5-f7d85b37d8fc")
                        },
                        new
                        {
                            Id = new Guid("8721b38a-7d3d-4352-9383-5fc4df669164"),
                            CompanyId = new Guid("b40e2593-d543-482f-8b2e-573a5b545095"),
                            UserId = new Guid("f22783b7-fe4d-4c38-8411-d7d9fd67b8f2")
                        },
                        new
                        {
                            Id = new Guid("ba9f3505-3614-4059-b46d-89c9a42c93fc"),
                            CompanyId = new Guid("215726ac-7186-42f2-94ab-37109dded89e"),
                            UserId = new Guid("0553b046-f861-49af-854b-49c9aab212ab")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblHobby", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HobbyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblHobby_Id");

                    b.ToTable("tblHobby", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b6c2909-b09e-480a-96c0-128ac3c1a532"),
                            Description = "Gyyymm",
                            HobbyName = "Gym",
                            Image = "image.jpg",
                            Type = "Indoor"
                        },
                        new
                        {
                            Id = new Guid("7fe1cf20-9d9d-4356-b6c1-415eeb5961a0"),
                            Description = "stick",
                            HobbyName = "Golf",
                            Image = "outdoor.jpg",
                            Type = "outdoor"
                        },
                        new
                        {
                            Id = new Guid("5d2ed8f4-9406-4a11-8edd-56f48ab5dda8"),
                            Description = "Run",
                            HobbyName = "Running",
                            Image = "run.jpg",
                            Type = "Outdoor"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ddcd9bd2-4cdf-44c4-9722-e2b3b7b0b7be"),
                            Email = "Alexr@gmail.com",
                            FirstName = "Alex",
                            Image = "image.jpg",
                            LastName = "Rosas",
                            Password = "qUqP5cyxm6YcTAhz05Hph5gvu9M=",
                            PhoneNumber = "2627459097",
                            UserName = "Arosas"
                        },
                        new
                        {
                            Id = new Guid("79dbf572-83c3-4537-9b46-5504f3086320"),
                            Email = "ss@gmail.com",
                            FirstName = "Someone",
                            Image = "image.jpg",
                            LastName = "Somebody",
                            Password = "B/qgP3XrZmyneblY753llJ5gtQ4=",
                            PhoneNumber = "3333333333",
                            UserName = "SSM"
                        },
                        new
                        {
                            Id = new Guid("d5cd7228-2514-4327-89ca-01b3832d82cb"),
                            Email = "sf@gmail.com",
                            FirstName = "sam",
                            Image = "sammy.jpg",
                            LastName = "fisher",
                            Password = "qUqP5cyxm6YcTAhz05Hph5gvu9M=",
                            PhoneNumber = "1111111111",
                            UserName = "sammyfish"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUserHobby", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUserHobby_Id");

                    b.HasIndex("HobbyId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserHobby", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfd9d7c4-e637-46b4-9a01-d75e9df2854a"),
                            HobbyId = new Guid("4b6c2909-b09e-480a-96c0-128ac3c1a532"),
                            UserId = new Guid("ddcd9bd2-4cdf-44c4-9722-e2b3b7b0b7be")
                        },
                        new
                        {
                            Id = new Guid("6844fd71-c9b3-4f81-817e-a362478773a2"),
                            HobbyId = new Guid("7fe1cf20-9d9d-4356-b6c1-415eeb5961a0"),
                            UserId = new Guid("79dbf572-83c3-4537-9b46-5504f3086320")
                        },
                        new
                        {
                            Id = new Guid("1a684d9d-2949-42cd-aad3-0dbfa118a710"),
                            HobbyId = new Guid("5d2ed8f4-9406-4a11-8edd-56f48ab5dda8"),
                            UserId = new Guid("d5cd7228-2514-4327-89ca-01b3832d82cb")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblCompany", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblAddress", "Address")
                        .WithMany("Companies")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("fk_tblCompany_AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEvent", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblAddress", "Address")
                        .WithMany("Events")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEvent_AddressId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblCompany", "Company")
                        .WithMany("Events")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEvent_CompanyId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblHobby", "Hobby")
                        .WithMany("Events")
                        .HasForeignKey("HobbyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEvent_HobbyId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblUser", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEvent_UserId");

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("Hobby");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblFriend", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblCompany", "Company")
                        .WithMany("Friends")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblFriend_CompanyId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblUser", "User")
                        .WithMany("Friends")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblFriend_UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUserHobby", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblHobby", "Hobby")
                        .WithMany("UserHobbies")
                        .HasForeignKey("HobbyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserHobby_HobbyId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblUser", "User")
                        .WithMany("UserHobbies")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserHobby_UserId");

                    b.Navigation("Hobby");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblAddress", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblCompany", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Friends");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblHobby", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("UserHobbies");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUser", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Friends");

                    b.Navigation("UserHobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
