// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheHobbyHub.PL.Data;

#nullable disable

namespace TheHobbyHub.PL.Migrations
{
    [DbContext(typeof(HobbyHubEntities))]
    partial class HobbyHubEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblAddress_Id");

                    b.ToTable("tblAddress", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e56212a4-d1b1-4c36-a668-b9ae561cd4b7"),
                            Address = "123 Main St",
                            City = "Anytown",
                            State = "CA",
                            Zip = "12345"
                        },
                        new
                        {
                            Id = new Guid("f1823c80-54b1-4cb6-84b7-a447905e78f7"),
                            Address = "456 Elm St",
                            City = "Othertown",
                            State = "NY",
                            Zip = "54321"
                        },
                        new
                        {
                            Id = new Guid("73cfc8e2-2da1-4c18-b018-288fc2c97538"),
                            Address = "789 Oak St",
                            City = "Somewhere",
                            State = "TX",
                            Zip = "67890"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblCompany_Id");

                    b.HasIndex("AddressId");

                    b.ToTable("tblCompany", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fff0570d-54f6-4f12-b1f3-a4c325fd9b12"),
                            AddressId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CompanyName = "Company A",
                            Image = "imageA.jpg",
                            Password = "/BafCUbj3r56CjioX1dcB1ynX20=",
                            UserName = "copanyA"
                        },
                        new
                        {
                            Id = new Guid("302948ec-d423-491c-8f42-c096b21c6c02"),
                            AddressId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CompanyName = "Company B",
                            Image = "imageB.jpg",
                            Password = "38Nd3/2M+aip9/TyIzVYXKylmQo=",
                            UserName = "companyB"
                        },
                        new
                        {
                            Id = new Guid("55ace91d-60a9-4ff6-b359-a52d7ce0e8ac"),
                            AddressId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CompanyName = "Company C",
                            Image = "imageC.jpg",
                            Password = "urYijG3X2+D44I400gasYPqLBHw=",
                            UserName = "companyC"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("tblAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tblUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblEvent_Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("tblAddressId");

                    b.HasIndex("tblUserId");

                    b.ToTable("tblEvent", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("79f1a58d-10f7-4bbf-be3c-57ba93b4eae8"),
                            CompanyId = new Guid("fff0570d-54f6-4f12-b1f3-a4c325fd9b12"),
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Event A",
                            Image = "imageA.jpg"
                        },
                        new
                        {
                            Id = new Guid("64d7f5f7-8f01-4415-8f1a-be85264d3af5"),
                            CompanyId = new Guid("302948ec-d423-491c-8f42-c096b21c6c02"),
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Event B",
                            Image = "imageB.jpg"
                        },
                        new
                        {
                            Id = new Guid("b2a95c1f-ccef-45dc-acf7-b4dfb3054bfa"),
                            CompanyId = new Guid("55ace91d-60a9-4ff6-b359-a52d7ce0e8ac"),
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Event C",
                            Image = "imageC.jpg"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblEventAddress_Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("EventId");

                    b.ToTable("tblEventAddress", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("af0a6c79-6d47-43ed-b241-a874ab91b255"),
                            AddressId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EventId = new Guid("79f1a58d-10f7-4bbf-be3c-57ba93b4eae8")
                        },
                        new
                        {
                            Id = new Guid("49c79e15-65f2-46c1-8e9d-6c4eae70da05"),
                            AddressId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EventId = new Guid("64d7f5f7-8f01-4415-8f1a-be85264d3af5")
                        },
                        new
                        {
                            Id = new Guid("9218b4a8-d0e6-489e-b8fa-a72f999588b2"),
                            AddressId = new Guid("a8890b05-1bd2-42ec-a38c-405b82d68263"),
                            EventId = new Guid("b2a95c1f-ccef-45dc-acf7-b4dfb3054bfa")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompaniesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesId");

                    b.HasIndex("EventsId");

                    b.ToTable("tblEventCompany");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventHobby", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblEventHobby_Id");

                    b.HasIndex("EventId");

                    b.HasIndex("HobbyId");

                    b.ToTable("tblEventHobby", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d79a8abf-540d-48e3-80d6-452cc20353ac"),
                            EventId = new Guid("79f1a58d-10f7-4bbf-be3c-57ba93b4eae8"),
                            HobbyId = new Guid("1809d7f9-0cf9-446d-a797-5a02dafb0688")
                        },
                        new
                        {
                            Id = new Guid("91ca67cb-b913-44d2-860d-12b517d50bac"),
                            EventId = new Guid("64d7f5f7-8f01-4415-8f1a-be85264d3af5"),
                            HobbyId = new Guid("c28a0700-6a10-4948-aae7-0f269824d188")
                        },
                        new
                        {
                            Id = new Guid("af42d9b7-7d90-4853-a399-9d5c498d570d"),
                            EventId = new Guid("b2a95c1f-ccef-45dc-acf7-b4dfb3054bfa"),
                            HobbyId = new Guid("38290c90-8d48-42c6-84fc-ca434f2c49dc")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblEventUser_Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("tblEventUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4fa0bd92-5de2-48f5-a7db-3fcdecf5bb5a"),
                            EventId = new Guid("79f1a58d-10f7-4bbf-be3c-57ba93b4eae8"),
                            UserId = new Guid("72dec7c7-54ec-472c-8671-04d2fdad571a")
                        },
                        new
                        {
                            Id = new Guid("f6580155-0165-4fd9-944f-1185cc286921"),
                            EventId = new Guid("64d7f5f7-8f01-4415-8f1a-be85264d3af5"),
                            UserId = new Guid("1f3d329a-aa0b-4c13-985b-9316464a7927")
                        },
                        new
                        {
                            Id = new Guid("7ce66c43-56e0-470d-a704-25f8604d0828"),
                            EventId = new Guid("b2a95c1f-ccef-45dc-acf7-b4dfb3054bfa"),
                            UserId = new Guid("a8890b05-1bd2-42ec-a38c-405b82d68263")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblFriend", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblFriend_Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("tblFriend", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c366e7c1-1a71-4036-9f4c-236c6034bd83"),
                            CompanyId = new Guid("fff0570d-54f6-4f12-b1f3-a4c325fd9b12"),
                            UserId = new Guid("5d7abddc-4d8e-4105-83ce-c83ceb0b9c2b")
                        },
                        new
                        {
                            Id = new Guid("55738053-d5c8-4f3a-b822-bbf3051fea4f"),
                            CompanyId = new Guid("302948ec-d423-491c-8f42-c096b21c6c02"),
                            UserId = new Guid("b751f7dd-99ce-4b8a-b895-e9a91a3f1317")
                        },
                        new
                        {
                            Id = new Guid("f414443f-9032-466a-a171-fbbf8e7769b1"),
                            CompanyId = new Guid("55ace91d-60a9-4ff6-b359-a52d7ce0e8ac"),
                            UserId = new Guid("c2f498f0-952a-450e-bfbc-259a244dc762")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblHobby", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HobbyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblHobby_Id");

                    b.ToTable("tblHobby", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1809d7f9-0cf9-446d-a797-5a02dafb0688"),
                            Description = "Gyyymm",
                            HobbyName = "Gym",
                            Image = "image.jpg",
                            Type = "Indoor"
                        },
                        new
                        {
                            Id = new Guid("c28a0700-6a10-4948-aae7-0f269824d188"),
                            Description = "stick",
                            HobbyName = "Golf",
                            Image = "outdoor.jpg",
                            Type = "outdoor"
                        },
                        new
                        {
                            Id = new Guid("38290c90-8d48-42c6-84fc-ca434f2c49dc"),
                            Description = "Run",
                            HobbyName = "Running",
                            Image = "run.jpg",
                            Type = "Outdoor"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("72dec7c7-54ec-472c-8671-04d2fdad571a"),
                            Email = "Alexr@gmail.com",
                            FirstName = "Alex",
                            Image = "image.jpg",
                            LastName = "Rosas",
                            Password = "qUqP5cyxm6YcTAhz05Hph5gvu9M=",
                            PhoneNumber = "2627459097",
                            UserName = "Arosas"
                        },
                        new
                        {
                            Id = new Guid("1f3d329a-aa0b-4c13-985b-9316464a7927"),
                            Email = "ss@gmail.com",
                            FirstName = "Someone",
                            Image = "image.jpg",
                            LastName = "Somebody",
                            Password = "B/qgP3XrZmyneblY753llJ5gtQ4=",
                            PhoneNumber = "3333333333",
                            UserName = "SSM"
                        },
                        new
                        {
                            Id = new Guid("a8890b05-1bd2-42ec-a38c-405b82d68263"),
                            Email = "sf@gmail.com",
                            FirstName = "sam",
                            Image = "sammy.jpg",
                            LastName = "fisher",
                            Password = "qUqP5cyxm6YcTAhz05Hph5gvu9M=",
                            PhoneNumber = "1111111111",
                            UserName = "sammyfish"
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUserHobby", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUserHobby_Id");

                    b.HasIndex("HobbyId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserHobby", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e55ca5f3-c3b7-46f4-a04f-ec73e946b873"),
                            HobbyId = new Guid("1809d7f9-0cf9-446d-a797-5a02dafb0688"),
                            UserId = new Guid("72dec7c7-54ec-472c-8671-04d2fdad571a")
                        },
                        new
                        {
                            Id = new Guid("33cea0d4-e7f9-40b1-8966-3ffbf9f49eea"),
                            HobbyId = new Guid("c28a0700-6a10-4948-aae7-0f269824d188"),
                            UserId = new Guid("1f3d329a-aa0b-4c13-985b-9316464a7927")
                        },
                        new
                        {
                            Id = new Guid("f8d271e9-bf2b-40ab-bade-470e0b50ff74"),
                            HobbyId = new Guid("38290c90-8d48-42c6-84fc-ca434f2c49dc"),
                            UserId = new Guid("a8890b05-1bd2-42ec-a38c-405b82d68263")
                        });
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblCompany", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblAddress", "Address")
                        .WithMany("Companies")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("fk_tblCompany_AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEvent", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblCompany", "Company")
                        .WithMany("Events")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEvent_CompanyId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblAddress", null)
                        .WithMany("Events")
                        .HasForeignKey("tblAddressId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblUser", null)
                        .WithMany("Events")
                        .HasForeignKey("tblUserId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventAddress", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblAddress", "Addresses")
                        .WithMany("EventAddresses")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEventAddress_AddressId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblEvent", "Events")
                        .WithMany("EventAddresses")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEventAddress_EventId");

                    b.Navigation("Addresses");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventCompany", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblCompany", "Companies")
                        .WithMany("EventCompany")
                        .HasForeignKey("CompaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheHobbyHub.PL.Entities.tblEvent", "Events")
                        .WithMany("EventCompany")
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventHobby", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblEvent", "Events")
                        .WithMany("EventHobbies")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEventHobby_EventId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblHobby", "Hobbies")
                        .WithMany("EventHobbies")
                        .HasForeignKey("HobbyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEventHobby_HobbyId");

                    b.Navigation("Events");

                    b.Navigation("Hobbies");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEventUser", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblEvent", "Events")
                        .WithMany("EventUsers")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEventUser_EventId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblUser", "Users")
                        .WithMany("EventUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblEventUser_UserId");

                    b.Navigation("Events");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblFriend", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblCompany", "Company")
                        .WithMany("Friends")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblFriend_CompanyId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblUser", "User")
                        .WithMany("Friends")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblFriend_UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUserHobby", b =>
                {
                    b.HasOne("TheHobbyHub.PL.Entities.tblHobby", "Hobby")
                        .WithMany("UserHobbies")
                        .HasForeignKey("HobbyId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserHobby_HobbyId");

                    b.HasOne("TheHobbyHub.PL.Entities.tblUser", "User")
                        .WithMany("UserHobbies")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserHobby_UserId");

                    b.Navigation("Hobby");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblAddress", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("EventAddresses");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblCompany", b =>
                {
                    b.Navigation("EventCompany");

                    b.Navigation("Events");

                    b.Navigation("Friends");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblEvent", b =>
                {
                    b.Navigation("EventAddresses");

                    b.Navigation("EventCompany");

                    b.Navigation("EventHobbies");

                    b.Navigation("EventUsers");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblHobby", b =>
                {
                    b.Navigation("EventHobbies");

                    b.Navigation("UserHobbies");
                });

            modelBuilder.Entity("TheHobbyHub.PL.Entities.tblUser", b =>
                {
                    b.Navigation("EventUsers");

                    b.Navigation("Events");

                    b.Navigation("Friends");

                    b.Navigation("UserHobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
